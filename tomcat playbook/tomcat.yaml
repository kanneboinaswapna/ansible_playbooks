---
 - name: tomcat 10 install playbook
   hosts: 172.31.24.145
   become: yes
   vars:
     username: tomcat
     groupname: tomcat
     homedir: /opt/tomcat
     shell: /bin/false
     MAJOR_VERSION: 10
     VERSION: 10.1.14
     java_version: "11"
   tasks:
     - name: install jdk
       ansible.builtin.apt:
        name: "openjdk-{{ java_version }}-jdk"
        update_cache: yes
        state: present
     - name: Ensure group "tomcat" exists
       ansible.builtin.group:
         name: tomcat 
         state: present
     - name: create tomcat user
       ansible.builtin.user:
         name: "{{ username }}"
         shell: "{{ shell }}"
         group: "{{ groupname }}"
     - name: download tomcat to /tmp 
       ansible.builtin.get_url:
         url: "https://dlcdn.apache.org/tomcat/tomcat-{{MAJOR_VERSION}}/v{{VERSION}}/bin/apache-tomcat-{{VERSION}}.tar.gz"
         dest: "/tmp/apache-tomcat-{{VERSION}}.tar.gz"
     - name: ensure the directory existing
       ansible.builtin.file:
         path: /opt/tomcat
         state: directory
     - name: extract tar file
       ansible.builtin.unarchive:
        src: "/tmp/apache-tomcat-{{VERSION}}.tar.gz"
        dest: "{{ homedir }}"
        owner: "{{ username }}"
        group: "{{ groupname }}"
        remote_src: yes
     - name: create a symlink
       ansible.builtin.file:
         src: "/opt/tomcat"
         dest: "/opt/tomcat/latest"
         owner: "{{ username }}" 
         group: "{{ groupname }}"     
         state: link
     - name: change ownership to /opt/tomcat
       ansible.builtin.file:
         path: /opt/tomcat
         owner: "{{ username }}"
         group: "{{ groupname }}"
     - name: give excute permissions
       ansible.builtin.file:
         path: "/opt/tomcat"
         mode: '755'
         state: directory
         owner: "{{ username }}"
         group: "{{ groupname }}"
     - name: Template a file
       ansible.builtin.template:
         src: /home/swapna/tomcat playbook/service.j2
         dest: /etc/systemd/system/tomcat.service
         remote_src: yes
     - name: reload a service file
       ansible.builtin.service:
         name: tomcat
         state: reloaded
     - name: enable the service file
       ansible.builtin.service:
         name: tomcat
         enabled: yes
     - name: start the service
       ansible.builtin.service:
         name: tomcat
         state: started
     - name: stop the service
       ansible.builtin.service:
         name: tomcat
         state: stopped
     - name: restart the service 
       ansible.builtin.service:
         name: tomcat
         state: restarted
     - name: get all the shell files
       ansible.builtin.command: sudo sh -c 'ls /opt/tomcat/latest/bin/*.sh'
       register: shell_files
     - name: print the value
       ansible.builtin.debug:
         var: shell_files
     - name: print each file
       ansible.builtin.debug:
        msg: "{{ item }}"
       loop: "{{ shell_files.stdout_lines }}"
     




        

